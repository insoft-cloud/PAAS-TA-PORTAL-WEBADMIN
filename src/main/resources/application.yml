# Spring properties
spring:
  application:
    name: PortalWebAdmin  # Identify this application
#Spring config setting (current version not used)
#  boot:
#    #Spring boot admin settings
#    admin:
#      routes:
#        endpoints: env,metrics,trace,info,trace,heapdump,hystrix.stream,docs
#        #Timeintervalin ms to update the status of App
#      monitor:
#        perio: 10000
#        #LifeTime of App status in ms.
#        status-lifetime: 10000
#        #Connection Timeout in ms when App's status and info
#        connect-timeout: 2000
#        #Read Timeout in ms when App's status and info
#        read-timeout: 5000
#      metadata-keys-to-sanitize: .password$,.*secret$,.*key$,.$token$,.credentials.,.*vcap_services$

  thymeleaf:
    cache: false # false : 서버 재시작 없이 새로고침.  개발서버 이상부터는 true로 설정.

    check-template: true
    check-template-location: true
    content-type: text/html
    enabled: true
    encoding: UTF-8
    # excluded-view-names:
    mode: XHTML
    prefix: /WEB-INF/views/
    suffix: .html
    # template-resolver-order:
    # view-names:

  http:
    multipart:
      enabled: true
      max-file-size: 1024MB
      max-request-size: 1024MB
      location: ${java.io.tmpdir}

  servlet:
    multipart:
      enabled: ${spring.http.multipart.enabled}
      max-file-size: ${spring.http.multipart.max-file-size}
      max-request-size: ${spring.http.multipart.max-request-size}
      location: ${spring.http.multipart.location}

#Infra Admin Settings (current version not used)
#project:
#  name: paasta-web-admin
#  artifactId: paasta-web-admin
#  description: paasta-web-admin
#info:
#  app:
#    encoding: Encoding - UTF-8
#  java:
#    source: Source - java ver
#    target: Instance1 - Java ver
#  spring:
#    profiles: ${spring.profiles.active:default}
#  build:
#    name: ${project.name}
#    artifact: ${project.artifactId}
#    description: ${project.description}


management:
  security:
    enabled: false

# HTTP Server
server:
  port: ${PORT:8090}   # HTTP (Tomcat) port
  session-timeout: 300
---
spring:
  profiles: local
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://localhost:2225/portalapi # YOUR LOCAL TEST SETTING
        commonapi: http://localhost:2225/commonapi # YOUR LOCAL TEST SETTING
        storageapi: http://localhost:2225/storageapi # YOUR LOCAL TEST SETTING
    storageapi:
      type: swift
logging:
  level:
    org.openpaas.paasta.portal.web.admin.exception.GlobalControllerExceptionHandler: DEBUG

eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:2221/eureka/ #YOUR LOCAL TEST SETTING
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10
---
spring:
  profiles: dev
paasta:
  portal:
    api:
      authorization:
        base64: Basic YWRtaW46b3BlbnBhYXN0YQ==
      zuulUrl:
        cfapi: http://XXX.XXX.XXX.XXX:2225/portalapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
        commonapi: http://XXX.XXX.XXX.XXX:2225/commonapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
        storageapi: http://XXX.XXX.XXX.XXX:2225/storageapi #YOUR GATEWAY SERVICE DEV SETTING(ACTIVE INFORMATION)
    storageapi:
      type: swift
logging:
  level:
    org.openpaas.paasta.portal.web.admin.exception.GlobalControllerExceptionHandler: DEBUG

eureka:
  client:
    serviceUrl:
      defaultZone: http://XXX.XXX.XXX.XXX:2221/eureka/ #YOUR EUREKA SERVICE DEV SETTING(ACTIVE INFORMATION)
      registry-fetch-interval-seconds: 5
  instance:
    hostname: ${spring.cloud.client.hostname}
    lease-expiration-duration-in-seconds: 5
    lease-renewal-interval-in-seconds: 10